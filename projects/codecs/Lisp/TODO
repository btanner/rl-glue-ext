
TODO list of the Lisp codec

$Revision$
$Date$


-------------------------------------------------------------------------------

TITLE:
Buffer handling refactoring, floating-point optimization.

DESCRIPTION:
The buffer class should be inherited from the fundamental-binary-stream class, 
and the usual buffer handling methods, like read-byte and write-byte should be 
implemented for it.

BENEFIT:
It would result a cleaner implementation and probably make floating point 
optimization for possible. It seems to be necessary for these implementations 
because they only support "raw" floating point coding via streams. See
ext:read-float and ext:write-float of CLISP...

-------------------------------------------------------------------------------

TITLE:
Optimizing Lispworks floating point coding.

DESCRIPTION:
This would be done by using ffi. Something like this:

(fli:with-dynamic-foreign-objects ((d :double 4.2d100))
  (values (fli:dereference d :type '(:unsigned :int))
          (fli:dereference d :type '(:unsigned :int) :index 1)))

(fli:with-dynamic-foreign-objects ((i (:c-array (:unsigned :int) 2)))
  (setf (fli:foreign-aref i 0) 2594766966)
  (setf (fli:foreign-aref i 1) 1423127490)
  (fli:dereference i :type :double))

You might need to use the feature :LITTLE-ENDIAN to choose which is the 
"high" word.

BENEFIT:
Faster Lispworks operation.

-------------------------------------------------------------------------------

TITLE:
Supporting more Lisp implementations.

DESCRIPTION:
The codec should be changed so to be able to compile and use with ECL and
ABCL as well.

BENEFIT:
Maybe more users.

